// SPDArrays-License-Identifier: MIT
pragma solidity ^0.8.13;
import "forge-std/Test.sol";

contract Arrays {
    function loop0(uint256[] memory arr) external {
        uint start = gasleft();
        for (uint i = 0; i < arr.length; i++) {}
        console.log(start - gasleft());
    }
    function loop1(uint256[] memory arr) external {
        uint start = gasleft();
        uint arrLength = arr.length;
        for (uint i = 0; i < arrLength; i++) {}
        console.log(start - gasleft());
    }
    function loop2(uint256[] memory arr) external {
        uint start = gasleft();
        uint arrLength = arr.length;
        for (uint i = 0; i < arrLength;) {
            unchecked {
                i++;
            }
        }
        console.log(start - gasleft());
    }
    function loop3(uint256[] memory arr) external {
        uint start = gasleft();
        uint arrLength = arr.length;
        for (uint i = 0; i < arrLength;) {
            unchecked {
                ++i;
            }
        }
        console.log(start - gasleft());
    }
}

contract Test51 is Test {

    Arrays public a = new Arrays();
    uint[] public arr = [1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10,1, 2, 3, 5, 6, 7, 8, 9, 10];

    function test_Arrays() external {
        a.loop0(arr);
        a.loop1(arr);
        a.loop2(arr);
        a.loop3(arr);
    }
}
